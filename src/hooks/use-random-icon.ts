import { useMemo } from 'react';
import {
  Activity,
  Airplay,
  AlarmClock,
  AlertTriangle,
  AlignCenter,
  Aperture,
  Archive,
  ArrowBigDown,
  Asterisk,
  AtSign,
  Award,
  Axe,
  Banknote,
  Bell,
  Bike,
  Binary,
  Book,
  Bookmark,
  Bot,
  Box,
  Briefcase,
  Brush,
  Bug,
  Building,
  Bus,
  Calculator,
  Calendar,
  Camera,
  Car,
  Cat,
  Check,
  ChevronDown,
  Chrome,
  Clipboard,
  Clock,
  Cloud,
  Code,
  Codepen,
  Coffee,
  Columns,
  Compass,
  Copy,
  Cpu,
  CreditCard,
  Crop,
  Crosshair,
  Crown,
  Database,
  Delete,
  Disc,
  Dog,
  DollarSign,
  Download,
  Dribbble,
  Droplet,
  Edit,
  ExternalLink,
  Eye,
  Facebook,
  Feather,
  Figma,
  File,
  Filter,
  Flag,
  Flame,
  Folder,
  Framer,
  Gift,
  Github,
  Gitlab,
  Globe,
  Grid,
  HardDrive,
  Hash,
  Headphones,
  Heart,
  HelpCircle,
  Home,
  Image,
  Inbox,
  Instagram,
  Key,
  Laptop,
  Layers,
  Layout,
  Link,
  Linkedin,
  List,
  Lock,
  LogIn,
  LogOut,
  Mail,
  Map,
  Maximize,
  Menu,
  MessageCircle,
  Mic,
  Minimize,
  Monitor,
  Moon,
  MoreHorizontal,
  MousePointer,
  Move,
  Music,
  Navigation,
  Package,
  Paperclip,
  Pause,
  PenTool,
  Percent,
  Phone,
  PieChart,
  Play,
  Plus,
  Power,
  Printer,
  Radio,
  RefreshCcw,
  Repeat,
  Rocket,
  Save,
  Scissors,
  Search,
  Send,
  Server,
  Settings,
  Share,
  Shield,
  ShoppingBag,
  ShoppingCart,
  Sidebar,
  Slack,
  Slash,
  Sliders,
  Smartphone,
  Smile,
  Speaker,
  Star,
  Sun,
  Sunrise,
  Sunset,
  Table,
  Tablet,
  Tag,
  Target,
  Terminal,
  ThumbsDown,
  ThumbsUp,
  ToggleLeft,
  Tool,
  Trash,
  TrendingUp,
  Truck,
  Twitch,
  Twitter,
  Type,
  Umbrella,
  Underline,
  Unlock,
  Upload,
  User,
  Users,
  Video,
  Voicemail,
  Volume2,
  Watch,
  Wifi,
  Wind,
  X,
  Youtube,
  Zap,
  ZoomIn,
  ZoomOut,
  type LucideIcon,
} from 'lucide-react';

const iconList: LucideIcon[] = [
  Activity,
  Airplay,
  AlarmClock,
  AlertTriangle,
  AlignCenter,
  Aperture,
  Archive,
  ArrowBigDown,
  Asterisk,
  AtSign,
  Award,
  Axe,
  Banknote,
  Bell,
  Bike,
  Binary,
  Book,
  Bookmark,
  Bot,
  Box,
  Briefcase,
  Brush,
  Bug,
  Building,
  Bus,
  Calculator,
  Calendar,
  Camera,
  Car,
  Cat,
  Check,
  ChevronDown,
  Chrome,
  Clipboard,
  Clock,
  Cloud,
  Code,
  Codepen,
  Coffee,
  Columns,
  Compass,
  Copy,
  Cpu,
  CreditCard,
  Crop,
  Crosshair,
  Crown,
  Database,
  Delete,
  Disc,
  Dog,
  DollarSign,
  Download,
  Dribbble,
  Droplet,
  Edit,
  ExternalLink,
  Eye,
  Facebook,
  Feather,
  Figma,
  File,
  Filter,
  Flag,
  Flame,
  Folder,
  Framer,
  Gift,
  Github,
  Gitlab,
  Globe,
  Grid,
  HardDrive,
  Hash,
  Headphones,
  Heart,
  HelpCircle,
  Home,
  Image,
  Inbox,
  Instagram,
  Key,
  Laptop,
  Layers,
  Layout,
  Link,
  Linkedin,
  List,
  Lock,
  LogIn,
  LogOut,
  Mail,
  Map,
  Maximize,
  Menu,
  MessageCircle,
  Mic,
  Minimize,
  Monitor,
  Moon,
  MoreHorizontal,
  MousePointer,
  Move,
  Music,
  Navigation,
  Package,
  Paperclip,
  Pause,
  PenTool,
  Percent,
  Phone,
  PieChart,
  Play,
  Plus,
  Power,
  Printer,
  Radio,
  RefreshCcw,
  Repeat,
  Rocket,
  Save,
  Scissors,
  Search,
  Send,
  Server,
  Settings,
  Share,
  Shield,
  ShoppingBag,
  ShoppingCart,
  Sidebar,
  Slack,
  Slash,
  Sliders,
  Smartphone,
  Smile,
  Speaker,
  Star,
  Sun,
  Sunrise,
  Sunset,
  Table,
  Tablet,
  Tag,
  Target,
  Terminal,
  ThumbsDown,
  ThumbsUp,
  ToggleLeft,
  Tool,
  Trash,
  TrendingUp,
  Truck,
  Twitch,
  Twitter,
  Type,
  Umbrella,
  Underline,
  Unlock,
  Upload,
  User,
  Users,
  Video,
  Voicemail,
  Volume2,
  Watch,
  Wifi,
  Wind,
  X,
  Youtube,
  Zap,
  ZoomIn,
  ZoomOut,
];

// Simple hash function for deterministic icon selection
function simpleHash(str: string): number {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    const char = str.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash |= 0; // Convert to 32bit integer
  }
  return Math.abs(hash);
}

export function useRandomIcon(seed: string): LucideIcon {
  return useMemo(() => {
    const hash = simpleHash(seed);
    const index = hash % iconList.length;
    return iconList[index];
  }, [seed]);
}